to inhome-dailyplan-model
  predict-inhome-activity
  generate-time-period
  
end

to predict-inhome-activity
  let file-name "Daily Plan/activities.csv"
  let filename "activities.csv"
  py:set "filename" filename
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
   )
  file-open file-name
  file-print "pid,gender,age,permonth_income,education,status,family_member,minor,retired,hhd_income"
  ask people 
  [
    let gender1 0
    ifelse gender = 0 [set gender1 2][set gender1 gender]
    if hhd-income < 100000 [set hhd-income-group 1]
    if hhd-income >= 100000 and hhd-income < 200000 [set hhd-income-group 2]
    if hhd-income >= 200000 and hhd-income < 300000 [set hhd-income-group 3]
    if hhd-income >= 300000 and hhd-income < 500000 [set hhd-income-group 4]
    if hhd-income >= 500000 and hhd-income < 700000 [set hhd-income-group 5]
    if hhd-income >= 700000 and hhd-income < 1000000 [set hhd-income-group 6]
    if hhd-income >= 1000000 [set hhd-income-group 7]
    
    if income < 3000 [set income-group 1]
    if income >= 3000 and income < 4500 [set income-group 2]
    if income >= 4500 and income < 6000 [set income-group 3]
    if income >= 6000 and income < 8000 [set income-group 4]
    if income >= 8000 and income < 10000 [set income-group 5]
    if income >= 10000 and income < 15000 [set income-group 6]
    if income >= 15000 [set income-group 7]
    let child count people with [hhd = [hhd] of myself and age <= 18]
    let old count people with [hhd = [hhd] of myself and status = 4]
    file-print (word pid","gender1","age-group","income-group","education","status","number","child","old","hhd-income-group)
  ]
  file-close
  
  (py:run "subprocess.run(['python', 'Daily plan/predict_activities.py'])")
  
  file-open "Daily Plan/activities.csv"
  while [not file-at-end?]
  [
    let data csv:from-row file-read-line
    if item 0 data != "pid"
    [
      let pid1 item 0 data
      ask one-of people with [pid = pid1]
   [
    ;generate weekday inhome activities
    set weekday-inhome-activity (list item 10 data item 11 data item 12 data item 13 data item 14 data item 15 data item 16 data item 17 data)
    if Electric-footbath = 0 and item 7 weekday-inhome-activity = 1 [set weekday-inhome-activity replace-item 7 weekday-inhome-activity 0]
    if Electric-footbath = 1 and item 7 weekday-inhome-activity = 0 [set weekday-inhome-activity replace-item 7 weekday-inhome-activity 1]
    ;generate weekend inhome activities  
    set weekend-inhome-activity (list item 18 data item 19 data item 20 data item 21 data item 22 data item 23 data item 24 data item 25 data)
    if Electric-footbath = 0 and item 7 weekday-inhome-activity = 1 [set weekend-inhome-activity replace-item 7 weekend-inhome-activity 0]
    if Electric-footbath = 1 and item 7 weekday-inhome-activity = 0 [set weekend-inhome-activity replace-item 7 weekend-inhome-activity 1]
   ]
   ]
  ]
  print "predict-inhome-activity finished"
end

to generate-time-period
  ;weekday
  ;step 1: output households attributes
  let file-name "Daily Plan/weekday dailyplan.csv"
  let filename "weekday dailyplan.csv"
  py:set "filename" filename
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
   )
  file-open file-name
  file-print "pid,gender,age,permonth_income,education,status,family_member,minor,retired,hhd_income,bathwinter,bathspring,bathsummer"
  ask people 
  [
    let gender1 0
    ifelse gender = 0 [set gender1 2][set gender1 gender]
    if hhd-income < 100000 [set hhd-income-group 1]
    if hhd-income >= 100000 and hhd-income < 200000 [set hhd-income-group 2]
    if hhd-income >= 200000 and hhd-income < 300000 [set hhd-income-group 3]
    if hhd-income >= 300000 and hhd-income < 500000 [set hhd-income-group 4]
    if hhd-income >= 500000 and hhd-income < 700000 [set hhd-income-group 5]
    if hhd-income >= 700000 and hhd-income < 1000000 [set hhd-income-group 6]
    if hhd-income >= 1000000 [set hhd-income-group 7]
    
    if income < 3000 [set income-group 1]
    if income >= 3000 and income < 4500 [set income-group 2]
    if income >= 4500 and income < 6000 [set income-group 3]
    if income >= 6000 and income < 8000 [set income-group 4]
    if income >= 8000 and income < 10000 [set income-group 5]
    if income >= 10000 and income < 15000 [set income-group 6]
    if income >= 15000 [set income-group 7]
    let child count people with [hhd = [hhd] of myself and age <= 18]
    let old count people with [hhd = [hhd] of myself and status = 4]
    file-print (word pid","gender1","age-group","income-group","education","status","number","child","old","hhd-income-group","Bath-time-winter","Bath-time-spring","Bath-time-summer)
  ]
  file-close
  
 (py:run "subprocess.run(['python', 'Daily plan/predict_dailyplan_weekday.py'])")
  
  file-open "Daily Plan/weekday dailyplan.csv"
  while [not file-at-end?]
  [
    let data csv:from-row file-read-line
    if item 0 data != "pid"
    [
      let pid1 item 0 data
      ask one-of people with [pid = pid1]
    [
    ;firstbath
    ifelse item 0 weekday-inhome-activity = 1 [set firstbath-1 (list item 14 data item 15 data)][set firstbath-1 (list 0 0)]
    ;secondbath
    ifelse item 1 weekday-inhome-activity = 1 [set secondbath-1 (list item 16 data item 17 data)][set secondbath-1 (list 0 0)]
    ;breakfast 
    ifelse item 2 weekday-inhome-activity = 1 [set breakfast-1 (list item 18 data item 19 data)][set breakfast-1 (list 0 0)]
    ;lunch
    ifelse item 3 weekday-inhome-activity = 1 [set lunch-1 (list item 20 data item 21 data)][set lunch-1 (list 0 0)]
    ;dinner 
    ifelse item 4 weekday-inhome-activity = 1 [set dinner-1 (list item 22 data item 23 data)][set dinner-1 (list 0 0)]
    ;washclothes 
    ifelse item 5 weekday-inhome-activity = 1 [set washclothes-1 (list item 24 data item 25 data)][set washclothes-1 (list 0 0)]
    ;clean
    ifelse item 6 weekday-inhome-activity = 1 [set clean-1 (list item 26 data item 27 data)][set clean-1 (list 0 0)]
    ;footbath
    ifelse item 7 weekday-inhome-activity = 1 [set footbath-1 (list item 28 data item 29 data)][set footbath-1 (list 0 0)]
     ]
    ]
  ]
  file-close
  
  let file-name3 "Daily Plan/adjust weekday.csv"
  let filename3 "adjust weekday.csv"
  py:set "filename" filename3
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
   )
  file-open file-name3
  file-print "pid,weekday_deptime,weekday_endtime,firstbathhappen1,firstbathperiod1,secondbathhappen1,secondbathperiod1,breakfasthappen1,breakfastperiod1,lunchhappen1,lunchperiod1,dinnerhappen1,dinnerperiod1,cleanhappen1,cleanperiod1,washclotheshappen1,washclothesperiod1,footbathhappen1,footbathperiod1"
  ask people 
  [
    let firstbathhappen item 0 firstbath-1
    let firstbathperiod item 1 firstbath-1
    let secondbathhappen item 0 secondbath-1
    let secondbathperiod item 1 secondbath-1
    let breakfasthappen item 0 breakfast-1
    let breakfastperiod item 1 breakfast-1
    let lunchhappen item 0 lunch-1
    let lunchperiod item 1 lunch-1  
    let dinnerhappen item 0 dinner-1
    let dinnerperiod item 1 dinner-1
    let washclotheshappen item 0 washclothes-1
    let washclothesperiod item 1 washclothes-1
    let cleanhappen item 0 clean-1
    let cleanperiod item 1 clean-1
    let footbathhappen item 0 footbath-1
    let footbathperiod item 1 footbath-1
    file-print (word pid","weekday-deptime","weekday-endtime","firstbathhappen","firstbathperiod","secondbathhappen","secondbathperiod","breakfasthappen","breakfastperiod","lunchhappen","lunchperiod","dinnerhappen","dinnerperiod","cleanhappen","cleanperiod","washclotheshappen","washclothesperiod","footbathhappen","footbathperiod)
  ]
  file-close
  
 (py:run "subprocess.run(['python', 'Daily plan/adjust_weekday.py'])")
  
  file-open "Daily Plan/adjust weekday new.csv"
  while [not file-at-end?]
  [
    let data csv:from-row file-read-line
    if item 0 data != "pid"
    [
      let pid1 item 0 data
      ask one-of people with [pid = pid1]
    [
        set firstbath-1 (list item 1 data item 2 data item 3 data)
        set secondbath-1 (list item 4 data item 5 data item 6 data)
        set breakfast-1 (list item 7 data item 8 data item 9 data)
        set lunch-1 (list item 10 data item 11 data item 12 data)
        set dinner-1 (list item 13 data item 14 data item 15 data)
        set washclothes-1 (list item 16 data item 17 data item 18 data)
        set clean-1 (list item 19 data item 20 data item 21 data)
        set footbath-1 (list item 22 data item 23 data item 24 data)
      ]
    ]
  ]
  file-close
  
  ;weekend
  ;step 1: output households attributes
  let file-name2 "Daily Plan/weekend dailyplan.csv"
  let filename2 "weekend dailyplan.csv"
  py:set "filename" filename2
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
   )
  file-open file-name2
  file-print "pid,gender,age,permonth_income,education,status,family_member,minor,retired,hhd_income,bathwinter,bathspring,bathsummer"
  ask people 
  [
    let gender1 0
    ifelse gender = 0 [set gender1 2][set gender1 gender]
    if hhd-income < 100000 [set hhd-income-group 1]
    if hhd-income >= 100000 and hhd-income < 200000 [set hhd-income-group 2]
    if hhd-income >= 200000 and hhd-income < 300000 [set hhd-income-group 3]
    if hhd-income >= 300000 and hhd-income < 500000 [set hhd-income-group 4]
    if hhd-income >= 500000 and hhd-income < 700000 [set hhd-income-group 5]
    if hhd-income >= 700000 and hhd-income < 1000000 [set hhd-income-group 6]
    if hhd-income >= 1000000 [set hhd-income-group 7]
    
    if income < 3000 [set income-group 1]
    if income >= 3000 and income < 4500 [set income-group 2]
    if income >= 4500 and income < 6000 [set income-group 3]
    if income >= 6000 and income < 8000 [set income-group 4]
    if income >= 8000 and income < 10000 [set income-group 5]
    if income >= 10000 and income < 15000 [set income-group 6]
    if income >= 15000 [set income-group 7]
    let child count people with [hhd = [hhd] of myself and age <= 18]
    let old count people with [hhd = [hhd] of myself and status = 4]
    file-print (word pid","gender1","age-group","income-group","education","status","number","child","old","hhd-income-group","Bath-time-winter","Bath-time-spring","Bath-time-summer)
  ]
  file-close
  
 (py:run "subprocess.run(['python', 'Daily plan/predict_dailyplan_weekend.py'])")
  file-open "Daily Plan/weekend dailyplan.csv"
  while [not file-at-end?]
  [
    let data csv:from-row file-read-line
    if item 0 data != "pid"
    [
      let pid1 item 0 data
      ask one-of people with [pid = pid1]
    [
    ;firstbath
    ifelse item 0 weekend-inhome-activity = 1 [set firstbath-2 (list item 14 data item 15 data)][set firstbath-2 (list 0 0)]
    ;secondbath
    ifelse item 1 weekend-inhome-activity = 1 [set secondbath-2 (list item 16 data item 17 data)][set secondbath-2 (list 0 0)]
    ;breakfast 
    ifelse item 2 weekend-inhome-activity = 1 [set breakfast-2 (list item 18 data item 19 data)][set breakfast-2 (list 0 0)]
    ;lunch
    ifelse item 3 weekend-inhome-activity = 1 [set lunch-2 (list item 20 data item 21 data)][set lunch-2 (list 0 0)]
    ;dinner 
    ifelse item 4 weekend-inhome-activity = 1 [set dinner-2 (list item 22 data item 23 data)][set dinner-2 (list 0 0)]
    ;washclothes 
    ifelse item 5 weekend-inhome-activity = 1 [set washclothes-2 (list item 24 data item 25 data)][set washclothes-2 (list 0 0)]
    ;clean
    ifelse item 6 weekend-inhome-activity = 1 [set clean-2 (list item 26 data item 27 data)][set clean-2 (list 0 0)]
    ;footbath
    ifelse item 7 weekend-inhome-activity = 1 [set footbath-2 (list item 28 data item 29 data)][set footbath-2 (list 0 0)]
     ]
    ]
  ]
  file-close
  
  let file-name4 "Daily Plan/adjust weekend.csv"
  let filename4 "adjust weekend.csv"
  py:set "filename" filename4
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
   )
  file-open file-name4
    file-print "pid,weekend_deptime,weekend_endtime,firstbathhappen1,firstbathperiod1,secondbathhappen1,secondbathperiod1,breakfasthappen1,breakfastperiod1,lunchhappen1,lunchperiod1,dinnerhappen1,dinnerperiod1,cleanhappen1,cleanperiod1,washclotheshappen1,washclothesperiod1,footbathhappen1,footbathperiod1"
  ask people 
  [
    let firstbathhappen item 0 firstbath-2
    let firstbathperiod item 1 firstbath-2
    let secondbathhappen item 0 secondbath-2
    let secondbathperiod item 1 secondbath-2
    let breakfasthappen item 0 breakfast-2
    let breakfastperiod item 1 breakfast-2
    let lunchhappen item 0 lunch-2
    let lunchperiod item 1 lunch-2  
    let dinnerhappen item 0 dinner-2
    let dinnerperiod item 1 dinner-2
    let washclotheshappen item 0 washclothes-2
    let washclothesperiod item 1 washclothes-2
    let cleanhappen item 0 clean-2
    let cleanperiod item 1 clean-2
    let footbathhappen item 0 footbath-2
    let footbathperiod item 1 footbath-2
    file-print (word pid","weekend-deptime","weekend-endtime","firstbathhappen","firstbathperiod","secondbathhappen","secondbathperiod","breakfasthappen","breakfastperiod","lunchhappen","lunchperiod","dinnerhappen","dinnerperiod","cleanhappen","cleanperiod","washclotheshappen","washclothesperiod","footbathhappen","footbathperiod)
  ]
  file-close
  
 (py:run "subprocess.run(['python', 'Daily plan/adjust_weekend.py'])")
  
  file-open "Daily Plan/adjust weekend new.csv"
  while [not file-at-end?]
  [
    let data csv:from-row file-read-line
    if item 0 data != "pid"
    [
      let pid1 item 0 data
      ask one-of people with [pid = pid1]
    [
        set firstbath-2 (list item 1 data item 2 data item 3 data)
        set secondbath-2 (list item 4 data item 5 data item 6 data)
        set breakfast-2 (list item 7 data item 8 data item 9 data)
        set lunch-2 (list item 10 data item 11 data item 12 data)
        set dinner-2 (list item 13 data item 14 data item 15 data)
        set washclothes-2 (list item 16 data item 17 data item 18 data)
        set clean-2 (list item 19 data item 20 data item 21 data)
        set footbath-2 (list item 22 data item 23 data item 24 data)
      ]
    ]
  ]
  file-close
  
  print "inhome-dailyplan-model finished"
end
