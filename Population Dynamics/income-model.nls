to income-model
    ;This model is used to simulate the fluctuations in wages
  ;Step 1: generate a set of income according to the average income this year
  ;Step 2: Distribute these salaries to employees according to certain rules (e.g., 20% of people receive salary increases, 20% receive salary reductions, and 60% remain basically unchanged)
  
  ;Step 1
  let mean-income 0
  (ifelse 
    year = 2021 [set mean-income round (item 0 MeanIncome)]
    year = 2022 [set mean-income round (item 1 MeanIncome)]
    year = 2023 [set mean-income round (item 2 MeanIncome)]
    year = 2024 [set mean-income round (item 3 MeanIncome)]
    year = 2025 [set mean-income round (item 4 MeanIncome)]
    year = 2026 [set mean-income round (item 5 MeanIncome)]
    year = 2027 [set mean-income round (item 6 MeanIncome)]
    year = 2028 [set mean-income round (item 7 MeanIncome)]
    year = 2029 [set mean-income round (item 8 MeanIncome)]
    [set mean-income round (item 11 MeanIncome)]
  )
  
  py:set "total_numbers" count people with [status = 2]
  py:Set "mean_income" mean-income
  (py:run
    "min_value = 3000"
    "max_value = 100000"
    
    "gamma_shape = 3"
    "gamma_scale = mean_income / gamma_shape"
    "random_numbers = []"
    "for _ in range(total_numbers):"
    "    while True:"
    "        value = gamma.rvs(gamma_shape, scale=gamma_scale, size=1)[0]"
    "        if min_value <= value <= max_value:"
    "            random_numbers.append(int(value))"
    "            break"
  )
  
  let income_number py:runresult "random_numbers"
  
  ;Step 2
  ask people with [status = 2][set status 6] ;Set the status of employees to 6 (pending salary distribution)
  let num-income-increase count people with [status = 6] * 0.2 ;Define the number of people receiving salary increases
  let num-income-decrease count people with [status = 6] * 0.1 ;Define the number of people receiving salary reductions
  ask people with [status = 6 and income = 0][set income random 20000 + 1] ;Create a virtual income for someone who originally had no income
  
  foreach income_number
  [
    a ->
    (ifelse
      ;salary increases
      count people with [status = 6 and income * 1.1 < a and income * 2 > a] > 0 and num-income-increase > 0
      [
        ask one-of people with [status = 6 and income * 1.1 < a and income * 2 > a]
        [
          set income a
          set status 2
          set num-income-increase num-income-increase - 1
          ask one-of people with [hhd = [hhd] of myself and relationship = 1][set flexible flexible + 1]
        ]
      ]
      ;salary decreases
      count people with [status = 6 and income * 0.9 < a and income * 0.3 > a] > 0 and num-income-decrease > 0
      [
        ask one-of people with [status = 6 and income * 0.9 < a and income * 0.3 > a]
        [
          set income a
          set status 2
          set num-income-decrease num-income-decrease - 1
          ask one-of people with [hhd = [hhd] of myself and relationship = 1][set flexible flexible + 1]
        ]
      ]
      ;Salary remains basically unchanged
      [
        ask min-one-of people with [status = 6][abs (a - income)]
        [
          set income a
          set status 2
        ]
      ]
    )
  ]
  print "income model finished"
end