to marriage-model
  ;Determine the number of marriages in the simulated year
  let num-marriage round (item (year - 2019) Nmarr / 1000) * 2
  let i1 int (num-marriage * 0.95)  ;Calculate the number of people under 40 who got married this year
  let i2 int num-marriage - i1 ; Calculate the number of people above 40 who got married this year
  determine-marriage-people i1 i2
  get-married
  print "marriage model finished"
end

to determine-marriage-people [num1 num2]
  while [num2 + num1 >= 0]
  [
    ;Two age groups are needed
    if (num1 > 0 and num2 > 0)
    [
      ;Randomly select an unmarried woman of appropriate age as the bride
      let bride nobody
      ifelse social-network
      [set bride one-of people with [gender = 0 and age >= 20 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]]
      [set bride one-of people with [gender = 0 and age >= 20 and count in-couple-neighbors = 0]]
      
      
      ;Choose a unmarried male of appropriate age from the bride's friends (if social network model exists) or a Unmarried male of appropriate age as the groom 
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        
        if (bridegroom != nobody) 
        [
          ;Successfully found a new couple and updated the required number of people
          ifelse ([age] of bride <= 39) [set num1 num1 - 1] [set num2 num2 - 1]
          ifelse ([age] of bride >= 40) [set num1 num1 - 1] [set num2 num2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color blue]
          ask bride 
          [
            create-couple-with bridegroom  ;create couple link
            ask my-friends with [other-end = bridegroom] [die] ;break the friend link
          ]
        ]
      ]
    ]
    
    ;only need people below 40 years old
    if (num1 > 0 and num2 <= 0) 
    [
      ;Randomly select an unmarried woman of appropriate age as the bride
      let bride nobody
      ifelse social-network
      [set bride one-of people with [gender = 0 and age >= 20 and age <= 39 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]]
      [set bride one-of people with [gender = 0 and age >= 20 and age <= 39 and count in-couple-neighbors = 0]]
      
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        if (bridegroom != nobody) 
        [
          ifelse ([age] of bride <= 39) [set num1 num1 - 1] [set num2 num2 - 1]
          ifelse ([age] of bride >= 40) [set num1 num1 - 1] [set num2 num2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color blue]
          ask bride 
          [
            create-couple-with bridegroom 
            ask my-friends with [other-end = bridegroom] [die] 
          ]
        ]
      ]
    ]
    
    ;only need people above 40 years old
    if (num1 <= 0 and num2 > 0)
    [
      let bride one-of people with [gender = 0 and age >= 40 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]
      
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        if (bridegroom != nobody) 
        [
          ifelse ([age] of bride <= 39) [set num1 num1 - 1] [set num2 num2 - 1]
          ifelse ([age] of bride >= 40) [set num1 num1 - 1] [set num2 num2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color blue]
          ask bride 
          [
            create-couple-with bridegroom  
            ask my-friends with [other-end = bridegroom] [die] 
          ]
        ]
      ]
    ]
  ]
end

to get-married
  ;select people will get married this year
  ;create a csv file to store attributes of people who move to another household because of getting marriage
  let file-mar1 (word "Daily Plan/marriage_house_move" year "year.csv")
  let file-mar-past1 (word "marriage_house_move" year "year.csv")
  py:set "filename" file-mar-past1
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
  )
  file-open file-mar1
  file-print "PID,livelong,livelat,residence"
  file-close
  
  ;Record the information of the couple who formed a new family due to marriage
  let file-mar2 (word "Daily Plan/marriage_new_house" year "year.csv")
  let file-mar-past2 (word "marriage_new_house" year "year.csv")
  py:set "filename" file-mar-past2
  (py:run
    "root_dir = os.getcwd()"
    "for root, dirs, files in os.walk(root_dir):"
    "  for file in files:"
    "    if file == filename:"
    "        file_path = os.path.join(root, file)"
    "        os.remove(file_path)"
  )
  file-open file-mar2
  file-print "PID"
  file-close
  
  ask people with [color = pink]
  [
    let bride self
    let bridegroom one-of people with [couple-neighbor? myself]
    let new-family 0 ; a local variable to record whether this new couple has already moved into a family
    
    ;Rules:
    ;Case1: Neither of them is the householder (relationship = 1): they will separate from their original family and form a new one
    ;Case2: One of them is householder: The one who is not householder joins the family who is householder
    ;Case3: If both are householder, the one with fewer persons joins the one with more persons.
    
    
    ; Case1: Neither of them is the householder (relationship = 1): form a new household
    if ([relationship] of bride != 1 and [relationship] of bridegroom != 1 and new-family = 0)
    [
      set new-family 1
      let hhd1 (max [hhd] of people + 1)
      ask one-of people with [(hhd = [hhd] of bride and relationship = 1) or (hhd = [hhd] of bridegroom and relationship = 1)][set flexible flexible + 1 if year >= 2021 [set appliance-trigger appliance-trigger + 1]] ;two original households' flexible trigger increases by 1
      let child-bridegroom people with [hhd = [hhd] of bridegroom and age < 18 and in-parent-neighbor? bridegroom] ;record children of bridegroom aged below 18 years old
      let child-bride people with [hhd = [hhd] of bride and age < 18 and in-parent-neighbor? bride] ;record children of bride aged below 18 years old
      ask bridegroom [set hhd hhd1 set relationship 1 set mandatory 1 if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
      ask bride [set hhd hhd1 set relationship 2 if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
      ask child-bride [set hhd hhd1 set relationship 3 if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
      ask child-bridegroom [set hhd hhd1 set relationship 3 if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
      file-close
    ]
    
    ;Case 2: One of them is householder: The one who is not the householder joins the family of the householder
    ;Case 2.1 Bride is a householder
    if ([relationship] of bride = 1 and [relationship] of bridegroom != 1 and new-family = 0) ;Bride is householder, groom is not, groom joins bride's household
    [
      set new-family 1
      ask one-of people with [hhd = [hhd] of bridegroom and relationship = 1][set flexible flexible + 1 if year >= 2021 [set appliance-trigger appliance-trigger + 1]]
      let child-bridegroom people with [hhd = [hhd] of bridegroom and age < 18 and parent-neighbor? bridegroom] ;record children of bridegroom aged below 18 years old
      ask bridegroom [set hhd [hhd] of bride set relationship 2]
      ask child-bridegroom [set hhd [hhd] of bride set relationship 3]
      ifelse [livelong] of bride = 0 and [livelat] of bride = 0
      [
        ask bridegroom [if livelong != 0 and livelat != 0[file-open file-mar2 file-print pid file-close]]
        ask child-bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
        file-close
      ]
      [
        let bride-long [livelong] of bride 
        let bride-lat [livelat] of bride
        let bride-residence 0
        ask bride [ifelse count in-purchase-neighbors = 1 [set bride-residence (word "Residence " [RID] of one-of residences with [purchase-neighbor? myself])][set bride-residence (word "Residence " [RID] of one-of residences with [rent-neighbor? myself])]]
        ask bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bride-long","bride-lat","bride-residence)]]
        ask child-bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bride-long","bride-lat","bride-residence)]]
        file-close
      ]
       ask people with [hhd = [hhd] of bride][move-to bride set livelong [livelong] of bride set livelat [livelat] of bride]
    ]
    ;Case 2.2 Bridegroom is a householder
    if ([relationship] of bride != 1 and [relationship] of bridegroom = 1 and new-family = 0) ;bridegroom is householder, bride is not, bride joins bridegroom's household
    [
      set new-family 1
      ask one-of people with [hhd = [hhd] of bride and relationship = 1][set flexible flexible + 1 if year >= 2021 [set appliance-trigger appliance-trigger + 1]] ;bride's original household's flexible trigger increases by 1
      let child-bride people with [hhd = [hhd] of bride and age < 18 and parent-neighbor? bridegroom] ;record children of bride aged below 18 years old
      ask bride [set hhd [hhd] of bridegroom set relationship 2]
      ask child-bride [set hhd [hhd] of bridegroom set relationship 3]
      ifelse [livelong] of bride = 0 and [livelat] of bride = 0
      [
        ask bride [if livelong != 0 and livelat != 0[file-open file-mar2 file-print pid file-close]]
        ask child-bride [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
        file-close
      ]
      [
        let bridegroom-long [livelong] of bridegroom
        let bridegroom-lat [livelat] of bridegroom
        let bridegroom-residence 0
        ask bridegroom [ifelse count in-purchase-neighbors = 1 [set bridegroom-residence (word "Residence " [RID] of one-of residences with [purchase-neighbor? myself])][set bridegroom-residence (word "Residence " [RID] of one-of residences with [rent-neighbor? myself])]]
        ask child-bride [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bridegroom-long","bridegroom-lat","bridegroom-residence)]]
        ask child-bride [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bridegroom-long","bridegroom-lat","bridegroom-residence)]]
        file-close
      ]
      ask people with [hhd = [hhd] of bridegroom][move-to bridegroom set livelong [livelong] of bridegroom set livelat [livelat] of bridegroom]
    ]
    
    ;Case 3: If both are householder, the one with fewer persons joins the one with more persons.
    if ([relationship] of bride = 1 and [relationship] of bridegroom = 1 and new-family = 0) 
    [
      set new-family 1
      let num-bride count people with [hhd = [hhd] of bride]
      let num-bridegroom count people with [hhd = [hhd] of bridegroom]
      ;Case 3.1: The bride's family is larger than the bridegroom's family.
      ifelse (num-bride > num-bridegroom) ;The bride's original family is larger than the groom's original family, and the groom joins the bride's family.
      [
        let hhd1 [hhd] of bridegroom
        let hhd2 [hhd] of bride
        ask bridegroom [set hhd hhd2 set relationship 2]
        let child-bridegroom people with [hhd = hhd1 and age < 18 and parent-neighbor? bridegroom] 
        if child-bridegroom != nobody [ask child-bridegroom [set hhd hhd2 set relationship 3]]
        ask people with [hhd = hhd2][move-to bride set livelong [livelong] of bride set livelat [livelat] of bride]
        ask bride [set flexible flexible + 1 if year >= 2021 [set appliance-trigger appliance-trigger + 1]] 
        ;The groom's original family chooses a householder and renews the family relationship
        if (count people with [hhd =  hhd1] > 0)
        [
          ;selecting householder
          let num-adult count people with [hhd = hhd1 and age >= 18]
          ifelse (num-adult > 0)
          [ask one-of people with [hhd = hhd1 and age >= 18] [set relationship 1 set mandatory [mandatory] of bridegroom set flexible [flexible] of bridegroom + 1]]
          [ask one-of people with [hhd = hhd1][set relationship 1]]
          let hhder one-of people with [hhd = hhd1 and relationship = 1]
          ask hhder
          [
            update-relationship hhd1 hhder ;renews the family relationship
            ;New householder records residence-related information
            set residence-cost [residence-cost] of bridegroom
            set residence-size [residence-size] of bridegroom
            if [count in-rent-neighbors] of bridegroom = 1 [let target one-of residences with [rent-neighbor? bridegroom] create-rent-with target]
            if [count in-purchase-neighbors] of bridegroom = 1 [let target one-of residences with [purchase-neighbor? bridegroom] create-purchase-with target]
          ]    
        ]
        ifelse [livelong] of bride = 0 and [livelat] of bride = 0
        [
          ask bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
          ask child-bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
        ]
        [
          let bride-long [livelong] of bride
          let bride-lat [livelat] of bride
          let bride-residence 0
          ask bride [ifelse count in-purchase-neighbors = 1 [set bride-residence (word "Residence " [RID] of one-of residences with [purchase-neighbor? myself])][set bride-residence (word "Residence " [RID] of one-of residences with [rent-neighbor? myself])]]
          ask bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bride-long","bride-lat","bride-residence)]]
          ask child-bridegroom [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bride-long","bride-lat","bride-residence)]]
          file-close
        ] 
        ask bridegroom [set residence-size 0 set residence-cost 0 set current-accessibility 0 set mandatory 0 set flexible 0 ask my-rents [die] ask my-purchases [die]]
      ]
      ;Case 3.2: The bridegroom's original family is larger than the groom's original family, and the groom joins the bride's family.
      [
        set new-family 1
        let hhd1 [hhd] of bride
        let hhd2 [hhd] of bridegroom
        ask bride [set hhd hhd2 set relationship 2]
        
        let child-bride people with [hhd = hhd1 and age < 18 and parent-neighbor? bride] 
        if child-bride != nobody [ask child-bride [set hhd hhd1 set relationship 3]]
        ask people with [hhd = hhd2][move-to bridegroom set livelong [livelong] of bridegroom set livelat [livelat] of bridegroom]
        ask bridegroom [set flexible flexible + 1 if year >= 2021 [set appliance-trigger appliance-trigger + 1]] ;由于家庭人数发生变化，flexible trigger + 1
        
        if (count people with [hhd =  hhd1] > 0)
        [
          let num-adult count people with [hhd = hhd1 and age >= 18]
          ifelse (num-adult > 0)
          [ask one-of people with [hhd = hhd1 and age >= 18] [set relationship 1]]
          [ask one-of people with [hhd = hhd1][set relationship 1]]
          let hhder one-of people with [hhd = hhd1 and relationship = 1]
          ask hhder 
          [
            update-relationship hhd1 hhder
            set residence-cost [residence-cost] of bride
            set residence-size [residence-size] of bride
            if [count in-rent-neighbors] of bride = 1 [let target one-of residences with [rent-neighbor? bride] create-rent-with target]
            if [count in-purchase-neighbors] of bride = 1 [let target one-of residences with [purchase-neighbor? bride] create-purchase-with target]
            set mandatory [mandatory] of bride set flexible [flexible] of bride + 1
          ]        
        ]
        ifelse [livelong] of bridegroom = 0 and [livelat] of bridegroom = 0
        [
          ask bride [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
          ask child-bride [if livelong != 0 and livelat != 0 [file-open file-mar2 file-print pid file-close]]
          file-close
        ]
        [
          let bridegroom-long [livelong] of bridegroom
          let bridegroom-lat [livelat] of bridegroom
          let bridegroom-residence 0
          ask bridegroom [ifelse count in-purchase-neighbors = 1 [set bridegroom-residence (word "Residence " [RID] of one-of residences with [purchase-neighbor? myself])][set bridegroom-residence (word "Residence " [RID] of one-of residences with [rent-neighbor? myself])]]
          ask bride [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bridegroom-long","bridegroom-lat","bridegroom-residence)]]
          ask child-bride [if livelong != 0 and livelat != 0 [file-open file-mar1 file-print (word pid","bridegroom-long","bridegroom-lat","bridegroom-residence)]]
          file-close
        ] 
        ask bride [set residence-size 0 set residence-cost 0 set current-accessibility 0 set mandatory 0 set flexible 0 ask my-rents [die] ask my-purchases [die]]  
      ]
    ]
    set color white ask bridegroom [set color white]
  ]
  ask people [set number count people with [hhd = [hhd] of myself] set hhd-income (sum [income] of people with [hhd = [hhd] of myself] ) * 12]
end

