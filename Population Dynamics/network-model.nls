to combine-attribute
  ask people
  [
    ;combine age
    if (age < 18) [set age-group 1]
    if (age >= 18 and age <= 24) [set age-group 2]
    if (age >= 25 and age <= 34) [set age-group 3]
    if (age >= 35 and age <= 44) [set age-group 4]
    if (age >= 45 and age <= 54) [set age-group 5]
    if (age >= 55 and age <= 64) [set age-group 6]
    if (age >= 65) [set age-group 7]
    
    ;combine education
    if (education <= 4) [set education-level 1]
    if (education = 5) [set education-level 2]
    if (Education = 6 or education = 7) [set education-level 3]
    if (education >= 8) [set education-level 4]
    
    ;combine income
    if (income <= 3000) [set income-group 1]
    if (income > 3000 and income <= 4500) [set income-group 2]
    if (income > 4500 and income <= 6000) [set income-group 3]
    if (income > 6000 and income <= 8000) [set income-group 4]
    if (income > 8000 and income <= 10000) [set income-group 5]
    if (income > 10000 and income <= 15000) [set income-group 6]
    if (income >= 15000) [set income-group 7]
  ]
end

to generate-network
  combine-attribute
  while [count people with [count in-friend-neighbors < min-friend] > 0]
  [
    ask people with [count in-friend-neighbors < min-friend]
    [
      let age-group1 age-group
      let gender1 gender
      let income-group1 income-group
      let education-level1 education-level
      let candidate-friends n-of 10 people with [count in-friend-neighbors < max-friend and hhd != [hhd] of myself]
      ask candidate-friends 
      [set my-score W-age * abs (age-group - age-group1) / 7 + W-gender * abs (gender - gender1) / 2 + w-income * abs (income-group1 - income-group) / 7 + w-education * abs (education-level - education-level1) / 4]
      create-friend-with min-one-of candidate-friends [my-score]
    ]
  ]
  ask links [set color white hide-link]
end

to update-friend
  ;断开朋友关系
  ask people
  [
    let age-group1 age-group
    let gender1 gender
    let income-group1 income-group
    let education-level1 education-level
    ask in-friend-neighbors 
    [
      let friend1 myself
      set my-score W-age * abs (age-group - age-group1) / 7 + W-gender * abs (gender - gender1) / 2 + w-income * abs (income-group1 - income-group) / 7 + w-education * abs (education-level - education-level1) / 4
      if my-score >= T-friend-break [ask my-friends with [other-end = friend1] [die]]
    ]
  ]
  
  ;为18岁的people生成交友圈
  ask people with [age = 18 and min-friend = 0 and max-friend = 0]
  [
    set max-friend random 20
    ifelse max-friend > 5 [set min-friend max-friend - 5] [set min-friend 0]
  ]
  
  ;朋友数量不够的重新交朋友
  while [count people with [count in-friend-neighbors < min-friend] > 0]
  [
    ask people with [count in-friend-neighbors < min-friend]
    [
      let age-group1 age-group
      let gender1 gender
      let income-group1 income-group
      let education-level1 education-level
      let candidate-friends n-of 10 other people with [count in-friend-neighbors < max-friend]
      ask candidate-friends 
      [set my-score W-age * abs (age-group - age-group1) / 7 + W-gender * abs (gender - gender1) / 2 + w-income * abs (income-group1 - income-group) / 7 + w-education * abs (education-level - education-level1) / 4]
      create-friend-with min-one-of candidate-friends [my-score]
    ]
 ]
  print "network-model finished"
end